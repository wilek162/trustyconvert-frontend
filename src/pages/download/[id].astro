---
import MainLayout from '../../layouts/MainLayout.astro'
import ConversionProgress from '../../components/features/ConversionProgress'
import DownloadManager from '../../components/features/DownloadManager'
import SessionManager from '../../components/features/SessionManager'

// Get the job ID from the URL
const { id } = Astro.params
---

<MainLayout
	title="Download Your Converted File | TrustyConvert"
	description="Securely download your converted file from TrustyConvert."
>
	<div class="container mx-auto max-w-3xl px-4 py-8">
		<div class="mb-8">
			<h1 class="text-3xl font-bold text-gray-900">Download Your Converted File</h1>
			<p class="mt-2 text-gray-600">
				Your file has been securely converted and is ready for download.
			</p>
		</div>

		<div class="mb-6">
			<SessionManager client:load />
		</div>

		<div class="grid grid-cols-1 gap-6 md:grid-cols-3">
			<div class="md:col-span-2">
				<!-- Main content with download options -->
				<div class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
					<h2 class="mb-4 text-xl font-semibold text-gray-900">Conversion Status</h2>

					<!-- Dynamic React component for job status and download -->
					{
						id && (
							<div id="download-container" data-job-id={id}>
								<DownloadManager jobId={id} client:load />
							</div>
						)
					}
				</div>
			</div>

			<div>
				<!-- Sidebar with helpful information -->
				<div class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
					<h3 class="mb-3 font-medium text-gray-900">Next Steps</h3>
					<ul class="space-y-2 text-sm text-gray-600">
						<li class="flex items-start">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="mr-1.5 mt-0.5 h-4 w-4 flex-shrink-0 text-green-500"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M5 13l4 4L19 7"></path>
							</svg>
							<span>Download your converted file</span>
						</li>
						<li class="flex items-start">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="mr-1.5 mt-0.5 h-4 w-4 flex-shrink-0 text-green-500"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M5 13l4 4L19 7"></path>
							</svg>
							<span>Files are available for 24 hours</span>
						</li>
						<li class="flex items-start">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="mr-1.5 mt-0.5 h-4 w-4 flex-shrink-0 text-green-500"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M5 13l4 4L19 7"></path>
							</svg>
							<span>Convert more files from the home page</span>
						</li>
					</ul>

					<div class="mt-4 border-t border-gray-100 pt-4">
						<h3 class="mb-2 font-medium text-gray-900">Alternative Formats</h3>
						<p class="mb-2 text-xs text-gray-500">
							Need a different format? Try converting your file to:
						</p>
						<div class="flex flex-wrap gap-2">
							<a
								href="/"
								class="rounded-md bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200"
							>
								PDF
							</a>
							<a
								href="/"
								class="rounded-md bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200"
							>
								DOCX
							</a>
							<a
								href="/"
								class="rounded-md bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200"
							>
								JPG
							</a>
							<a
								href="/"
								class="rounded-md bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200"
							>
								PNG
							</a>
						</div>
					</div>

					<div class="mt-6">
						<a
							href="/"
							class="inline-flex w-full items-center justify-center rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="mr-2 h-4 w-4"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
							</svg>
							Convert Another File
						</a>
					</div>
				</div>
			</div>
		</div>

		<div class="mt-8 rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
			<h2 class="mb-4 text-xl font-semibold text-gray-900">Shareable Link</h2>
			<p class="mb-4 text-sm text-gray-600">
				Share this link with others to allow them to download your converted file. The link will
				expire in 24 hours.
			</p>

			<div class="flex items-center">
				<input
					type="text"
					value={`${Astro.url.origin}/download/${id}`}
					readonly
					class="w-full rounded-l-md border border-r-0 border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none"
				/>
				<button
					id="copy-link-button"
					class="rounded-r-md border border-blue-600 bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700"
				>
					Copy
				</button>
			</div>

			<div id="copy-success" class="mt-2 hidden text-sm text-green-600">
				Link copied to clipboard!
			</div>
		</div>
	</div>
</MainLayout>

<script>
	// Handle copy button click
	document.addEventListener('DOMContentLoaded', () => {
		const copyButton = document.getElementById('copy-link-button')
		const copySuccess = document.getElementById('copy-success')

		if (copyButton && copySuccess) {
			copyButton.addEventListener('click', () => {
				// Get the input field
				const linkInput = copyButton.previousElementSibling as HTMLInputElement

				// Select the text
				linkInput.select()
				linkInput.setSelectionRange(0, 99999) // For mobile devices

				// Copy the text
				document.execCommand('copy')

				// Show success message
				copySuccess.classList.remove('hidden')

				// Hide after 3 seconds
				setTimeout(() => {
					copySuccess.classList.add('hidden')
				}, 3000)
			})
		}
	})
</script>
