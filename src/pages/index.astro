---
// src/pages/index.astro
import { Check, Lock, Zap } from '@lucide/astro'

import MainLayout from '@/layouts/MainLayout.astro'
import { Hero } from '@/components/Hero'
import { HowItWorks } from '@/components/HowItWorks'
import { Features } from '@/components/Features'
import { FAQ } from '@/components/FAQ'
import { SupportedFormats } from '@/components/SupportedFormats'
import { Testimonials } from '@/components/Testimonials'
import { DEFAULT_LANGUAGE } from '@/lib/i18n/config'
import { t } from '@/lib/i18n/translations'
import { LANGUAGES } from '@/lib/i18n/config'

// Remove prerender=false flag as it's incompatible with static site generation

// Get the default language
const lang = DEFAULT_LANGUAGE.code

// Get translations for the current language
const title = t('site_name', lang) + ' - ' + t('home_hero_title', lang)
const description = t('site_description', lang)

// Create structured data for SEO
const structuredData = {
	'@context': 'https://schema.org',
	'@type': 'WebApplication',
	name: 'TrustyConvert',
	description: description,
	applicationCategory: 'UtilityApplication',
	operatingSystem: 'All',
	offers: {
		'@type': 'Offer',
		price: '0',
		priceCurrency: 'USD'
	}
} as any // Type assertion to avoid structured data type issues

// Generate alternate language URLs for static build
const alternateLanguages = LANGUAGES.map((lang) => ({
	code: lang.code,
	name: lang.name,
	url: `${Astro.url.origin}${lang.code === DEFAULT_LANGUAGE.code ? '' : `/${lang.code}`}`
}))
---

<MainLayout
	title={title}
	description={description}
	extraStructuredData={structuredData}
	alternateLanguages={alternateLanguages}
>
	<div class="bg-gradient-to-b from-white to-lightGray/20">
		<div id="convert" class="scroll-mt-24">
			<!-- Use client:only for Hero component to avoid hydration issues -->
			<Hero client:only="react" />
		</div>

		<HowItWorks />
	</div>

	<Features />

	<SupportedFormats />

	<Testimonials />

	<FAQ />
</MainLayout>

<style is:global>
	/* Add loading state styles */
	.file-upload-loading {
		opacity: 0.7;
		pointer-events: none;
	}

	/* Custom card styling */
	.trusty-card {
		@apply rounded-xl border border-trustTeal/20 bg-white p-8 shadow-md transition-all duration-300;
	}

	/* Section styling */
	.trusty-section {
		@apply py-20 md:py-28;
	}

	.trusty-container {
		@apply mx-auto max-w-7xl px-4 sm:px-6 lg:px-8;
	}

	/* Feature grid styling */
	.features-grid {
		@apply grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3;
	}

	/* Button styling */
	.btn {
		@apply inline-flex items-center justify-center rounded-button px-6 py-3 text-base font-medium transition-all duration-200;
	}

	.btn-primary {
		@apply bg-trustTeal text-white hover:bg-trustTeal/90 hover:shadow-md;
	}

	.btn-outline {
		@apply border border-white text-white hover:bg-white/10;
	}

	/* Testimonial styling */
	.testimonial-card {
		@apply rounded-xl bg-white p-6 shadow-md;
	}
</style>
