---
import '@/styles/global.css'
// Import the app initialization
import '@/lib/app'

// Define a type for structured data to avoid using 'any'
type StructuredData = {
	'@context': string
	'@type': string
	[key: string]:
		| string
		| number
		| boolean
		| null
		| undefined
		| StructuredData
		| Array<string | number | StructuredData>
}

interface Props {
	title: string
	description: string
	image?: string
	canonical?: string
	extraStructuredData?: StructuredData
	alternateLanguages?: { code: string; name: string }[]
}

const {
	title,
	description,
	image = '/images/trustyconvert-og.jpg',
	canonical,
	extraStructuredData,
	alternateLanguages = []
} = Astro.props

// Compute the app version for cache busting
const appVersion = import.meta.env.PUBLIC_APP_VERSION || '0.0.1';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<meta name="application-version" content={appVersion} />

		<!-- Canonical URL -->
		{canonical && <link rel="canonical" href={canonical} />}

		<!-- Alternate language links -->
		{
			alternateLanguages.map((lang) => (
				<link
					rel="alternate"
					hreflang={lang.code}
					href={`${Astro.url.origin}/${lang.code !== 'en' ? lang.code : ''}`}
				/>
			))
		}

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={canonical || Astro.url} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={new URL(image, Astro.url)} />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonical || Astro.url} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={new URL(image, Astro.url)} />

		<!-- Structured Data -->
		{
			extraStructuredData && (
				<script type="application/ld+json" set:html={JSON.stringify(extraStructuredData)} />
			)
		}

		<!-- Preconnect to API -->
		<link rel="preconnect" href="/api" />
		
		<!-- Preload critical assets -->
		<link rel="preload" href="/fonts/inter-var.woff2" as="font" type="font/woff2" crossorigin />
	</head>
	<body class="min-h-screen bg-gray-50">
		<header class="bg-white shadow-sm">
			<div class="container mx-auto flex items-center justify-between px-4 py-4">
				<a href="/" class="text-2xl font-bold text-blue-600">TrustyConvert</a>
				<nav>
					<ul class="flex space-x-6">
						<li><a href="/" class="text-gray-600 hover:text-blue-600">Home</a></li>
						<li><a href="/about" class="text-gray-600 hover:text-blue-600">About</a></li>
						<li><a href="/privacy" class="text-gray-600 hover:text-blue-600">Privacy</a></li>
					</ul>
				</nav>
			</div>
		</header>

		<main class="container mx-auto px-4 py-8">
			<slot />
		</main>

		<footer class="bg-gray-800 py-8 text-white">
			<div class="container mx-auto px-4">
				<div class="grid grid-cols-1 gap-8 md:grid-cols-3">
					<div>
						<h3 class="mb-4 text-lg font-semibold">TrustyConvert</h3>
						<p class="text-gray-300">Fast, secure file conversion for all your document needs.</p>
					</div>
					<div>
						<h3 class="mb-4 text-lg font-semibold">Links</h3>
						<ul class="space-y-2">
							<li><a href="/" class="text-gray-300 hover:text-white">Home</a></li>
							<li><a href="/about" class="text-gray-300 hover:text-white">About</a></li>
							<li><a href="/privacy" class="text-gray-300 hover:text-white">Privacy Policy</a></li>
						</ul>
					</div>
					<div>
						<h3 class="mb-4 text-lg font-semibold">Security</h3>
						<p class="text-gray-300">
							Your files are automatically deleted after conversion. We never store your personal
							data.
						</p>
					</div>
				</div>
				<div class="mt-8 border-t border-gray-700 pt-6 text-center text-gray-400">
					&copy; {new Date().getFullYear()} TrustyConvert. All rights reserved. | Version {appVersion}
				</div>
			</div>
		</footer>

		{import.meta.env.DEV && (
			<script>
				// Import the test utility in development mode
				import('/src/lib/api/test.ts').then(module => {
					// Make test function available in the console
					window.testTrustyConvertAPI = module.testMockAPI;
					console.info('ðŸ§ª TrustyConvert API test utility loaded. Run window.testTrustyConvertAPI() in the console to test API mocks.');
				}).catch(err => {
					console.error('Failed to load test utility:', err);
				});
			</script>
		)}
		
		<!-- Initialize app -->
		<script>
			// This ensures the app is initialized as early as possible
			import { initializeApp, initializeBrowser } from '../lib/app';
			
			// Use requestIdleCallback when available, otherwise use setTimeout
			const scheduleInit = window.requestIdleCallback || setTimeout;
			
			scheduleInit(() => {
				initializeApp().then(initializeBrowser);
			}, { timeout: 1000 });
		</script>
	</body>
</html>
