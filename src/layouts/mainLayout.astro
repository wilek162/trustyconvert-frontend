---
import '@/styles/global.css'
// Import the app initialization
import { initializeApp, initializeBrowser } from '@/lib/app'
// Import fonts
import '@fontsource-variable/inter'
import '@fontsource/poppins/400.css'
import '@fontsource/poppins/500.css'
import '@fontsource/poppins/600.css'
import '@fontsource/poppins/700.css'
import { AppProviders } from '@/components/providers/AppProviders'
import { CloseSession } from '@/components/features/session'
import { getAlternateLanguages } from '@/lib/i18n/middleware'
import LanguageSelector from '@/components/common/LanguageSelector.astro'
import NavLink from '@/components/common/NavLink.astro'
import { t } from '@/lib/i18n/translations'
import { getLanguageDetectionScript } from '@/middleware'
// import { OfflineBanner } from '@/components/ui/offlineBanner'

// Define a type for structured data to avoid using 'any'
type StructuredData = {
	'@context': string
	'@type': string
	[key: string]:
		| string
		| number
		| boolean
		| null
		| undefined
		| StructuredData
		| Array<string | number | StructuredData>
}

interface Props {
	title: string
	description: string
	image?: string
	canonical?: string
	ogImage?: string
	noindex?: boolean
	extraStructuredData?: StructuredData | any
	alternateLanguages?: { code: string; name: string; url?: string }[]
	lang?: string
}

// Compute the app version for cache busting
const appVersion = import.meta.env.PUBLIC_APP_VERSION || '0.0.1'

// Check if we're in static mode
const isStaticMode = import.meta.env.OUTPUT === 'static'

// Initialize the application
initializeApp()

// Get the current language from middleware
const currentLang = Astro.props.lang || 'en'

// Default SEO values
const {
	title = 'TrustyConvert - Fast & Secure File Conversion',
	description = 'Convert files quickly and securely with TrustyConvert. No registration required, your privacy guaranteed.',
	canonical = Astro.url.href,
	ogImage = '/og-image.png',
	noindex = false,
	alternateLanguages = getAlternateLanguages(Astro),
	extraStructuredData = null
} = Astro.props

// Initialize browser features
initializeBrowser()

// Get the language detection script for static mode
const languageDetectionScript = isStaticMode ? getLanguageDetectionScript() : ''
---

<!doctype html>
<html lang={currentLang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<meta name="application-version" content={appVersion} />

		<!-- Canonical URL -->
		{canonical && <link rel="canonical" href={canonical} />}

		<!-- Alternate language links -->
		{
			 alternateLanguages &&
        		alternateLanguages.map((lang: { code: string; name: string; url?: string }) => (
            			<link
                	rel="alternate"
                	hreflang={lang.code}
                	href={lang.url || `/${lang.code !== 'en' ? lang.code : ''}`}
           		/>
        ))
		}

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={canonical || Astro.url} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={ogImage} />
		<meta
			property="og:locale"
			content={currentLang === 'en' ? 'en_US' : `${currentLang}_${currentLang.toUpperCase()}`}
		/>

		{
			alternateLanguages &&
				alternateLanguages
					.filter((lang: { code: string; name: string; url?: string }) => lang.code !== currentLang)
					.map((lang: { code: string; name: string; url?: string }) => (
						<meta
							property="og:locale:alternate"
							content={lang.code === 'en' ? 'en_US' : `${lang.code}_${lang.code.toUpperCase()}`}
						/>
					))
		}

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonical || Astro.url} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={ogImage} />

		<!-- Structured Data -->
		{
			extraStructuredData && (
				<script type="application/ld+json" set:html={JSON.stringify(extraStructuredData)} />
			)
		}

		<!-- Preconnect to API -->
		<link rel="preconnect" href="/api" />

		<!-- Preload critical assets -->
		<link rel="preload" href="/fonts/inter-var.woff2" as="font" type="font/woff2" crossorigin />
		
		<!-- Client-side language detection for static mode -->
		{isStaticMode && <Fragment set:html={languageDetectionScript} />}
	</head>
	<body class="min-h-screen bg-background font-sans antialiased">
		<!-- Offline status banner -->
		<!-- <OfflineBanner client:load /> -->

		<header
			class="sticky top-0 z-50 border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60"
		>
			<div class="trusty-container flex h-24 items-center justify-between">
				<div class="flex items-center gap-6">
					<a href="/" class="group flex items-center space-x-3">
						<div
							class="relative h-20 w-20 overflow-hidden rounded-lg bg-trustTeal/10 p-0.5 transition-all group-hover:bg-trustTeal/20 group-hover:shadow-sm"
						>
							<img
								src="/logo-no-bg.svg"
								alt="TrustyConvert Logo"
								class="h-full w-full object-contain transition-transform group-hover:scale-105"
							/>
						</div>
						<span
							class="text-2xl font-bold text-foreground transition-all group-hover:text-trustTeal"
							>TrustyConvert</span
						>
					</a>
					<nav class="hidden md:flex">
						<ul class="flex items-center gap-8">
							<li>
								<NavLink
									href="/"
									className="text-sm font-medium transition-colors hover:text-foreground"
								>
									{t('nav_home', currentLang)}
								</NavLink>
							</li>
							<li>
								<NavLink
									href="/all-conversions"
									className="text-sm font-medium transition-colors hover:text-foreground"
								>
									{t('nav_all_conversions', currentLang)}
								</NavLink>
							</li>
							<li>
								<NavLink
									href="/blog"
									className="text-sm font-medium transition-colors hover:text-foreground"
								>
									{t('nav_blog', currentLang)}
								</NavLink>
							</li>
							<li>
								<NavLink
									href="/about"
									className="text-sm font-medium transition-colors hover:text-foreground"
								>
									{t('nav_about', currentLang)}
								</NavLink>
							</li>
							<li>
								<NavLink
									href="/privacy"
									className="text-sm font-medium transition-colors hover:text-foreground"
								>
									{t('nav_privacy', currentLang)}
								</NavLink>
							</li>
						</ul>
					</nav>
				</div>
				<div class="flex items-center gap-4">
					<LanguageSelector currentLang={currentLang} class="mr-2" />
					<a
						href="/"
						class="hidden items-center rounded-button bg-trustTeal px-6 py-3 text-sm font-medium text-white transition-all hover:bg-trustTeal/90 hover:shadow-md md:inline-flex"
					>
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="16"
							height="16"
							viewBox="0 0 24 24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
							class="mr-2"
						>
							<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
							<polyline points="7 10 12 15 17 10"></polyline>
							<line x1="12" y1="15" x2="12" y2="3"></line>
						</svg>
						Convert Files
					</a>
				</div>
			</div>
		</header>

		<main>
			<slot />
		</main>

		<footer class="border-t border-border bg-background">
			<div class="trusty-container py-12">
				<div class="grid grid-cols-1 gap-8 md:grid-cols-3">
					<div>
						<a href="/" class="flex items-center space-x-2">
							<img src="/logo-no-bg.svg" alt="TrustyConvert Logo" class="h-10 w-10" />
							<span class="text-xl font-bold">TrustyConvert</span>
						</a>
						<p class="mt-4 text-sm text-muted-foreground">
							Fast, secure file conversion with privacy guaranteed. No registration required.
						</p>
					</div>
					<div class="grid grid-cols-2 gap-8">
						<div>
							<h3 class="mb-3 text-sm font-medium">Product</h3>
							<ul class="space-y-2 text-sm">
								<li>
									<NavLink href="/" className="text-muted-foreground hover:text-foreground">
										{t('nav_home', currentLang)}
									</NavLink>
								</li>
								<li>
									<NavLink
										href="/all-conversions"
										className="text-muted-foreground hover:text-foreground"
									>
										{t('nav_all_conversions', currentLang)}
									</NavLink>
								</li>
								<li>
									<NavLink href="/blog" className="text-muted-foreground hover:text-foreground">
										{t('nav_blog', currentLang)}
									</NavLink>
								</li>
							</ul>
						</div>
						<div>
							<h3 class="mb-3 text-sm font-medium">Legal</h3>
							<ul class="space-y-2 text-sm">
								<li>
									<NavLink href="/privacy" className="text-muted-foreground hover:text-foreground">
										{t('footer_privacy', currentLang)}
									</NavLink>
								</li>
								<li>
									<NavLink href="/terms" className="text-muted-foreground hover:text-foreground">
										{t('footer_terms', currentLang)}
									</NavLink>
								</li>
							</ul>
						</div>
					</div>
					<div>
						<h3 class="mb-3 text-sm font-medium">Language</h3>
						<LanguageSelector currentLang={currentLang} />
					</div>
				</div>
				<div class="mt-12 border-t border-border pt-8 text-center">
					<p class="text-sm text-muted-foreground">
						&copy; {new Date().getFullYear()} TrustyConvert. All rights reserved.
					</p>
				</div>
			</div>
		</footer>

		<AppProviders client:load>
			<CloseSession client:idle />
		</AppProviders>
	</body>
</html>
